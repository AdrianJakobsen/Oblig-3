package Tests;

import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.Collections;

import org.junit.Test;

import Implementation.Employee;
import Implementation.Guest;
import abstractClasses.Card;

public class testCard {

	@Test
	public void testStaticCardNumber(){
		Card emp1 = new Employee("adrian", "jakobsen", 1234);
		Card emp2 = new Employee("adrian", "jensen", 1234);
		Card emp3 = new Employee("adrian", "Alfred", 1234);
		Card emp4 = new Employee("petter", "jakobsen", 1234);
		Card emp5 = new Employee("AdrianT", "jakobsen", 1234);
		
		Card emp6 = new Guest("pelle", "jakobsen", 1234);
		Card emp7 = new Guest("AdrianT", "politibil", 1234);
		
		assertEquals(105, emp5.getCardNumber());
		assertEquals(107, emp7.getCardNumber());
		assertEquals(101, emp1.getCardNumber());
	}
	
	@Test
	public void compareTwoDiffrentCardsSameType(){
		Card emp1 = new Employee("adrian", "jakobsen", 1234);
		Card emp2 = new Employee("adrian", "Jensen", 1234);
		assertEquals(-1, emp1.compareTo(emp2));
	}
	@Test
	public void compareTwoDiffrentCardsDiffrentTypes(){
		Card emp1 = new Employee("adrian", "jakobsen", 1234);
		Card guest = new Guest("pelle", "politibil", 1251);
		assertEquals(-1, emp1.compareTo(guest));
	}

	@Test
	public void compareTwoIndeticalCards(){
		Card emp1 = new Employee("adrian", "jakobsen", 1234);
		Card emp2 = new Employee("adrian", "jakobsen", 1234);
		assertEquals(0, emp1.compareTo(emp2));
	}

	@Test
	public void cloneCardAndGetAnIndentical() throws CloneNotSupportedException{
		Card emp1 = new Employee("adrian", "jakobsen", 1234);
		Card emp2 = (Card) emp1.clone();
		assertEquals(emp1.getCardNumber(), emp2.getCardNumber());
		assertEquals(emp1.getDateCreated(), emp2.getDateCreated());
		assertEquals(emp1.getFirstName(), emp2.getFirstName());
		assertEquals(emp1.getLastName(), emp2.getLastName());
		assertEquals(emp1.getPin(), emp2.getPin());
	}

	@Test
	public void sortingTest(){
		ArrayList<Card> listOfCards = new ArrayList<>();
		Card emp1 = new Employee("adrian", "jakobsen", 1234);
		Card emp2 = new Employee("adrian", "jensen", 1234);
		Card emp3 = new Employee("adrian", "Alfred", 1234);
		Card emp4 = new Employee("petter", "jakobsen", 1234);
		Card emp5 = new Employee("AdrianT", "jakobsen", 1234);

		Card emp6 = new Guest("pelle", "jakobsen", 1234);
		Card emp7 = new Guest("AdrianT", "politibil", 1234);

		listOfCards.add(emp1);
		listOfCards.add(emp2);
		listOfCards.add(emp3);
		listOfCards.add(emp4);
		listOfCards.add(emp5);
		listOfCards.add(emp6);
		listOfCards.add(emp7);

		Collections.sort(listOfCards);

		for(int i=1; i<listOfCards.size(); i++){
			assertTrue(listOfCards.get(i-1).compareTo(listOfCards.get(i)) <=0);
		}

	}
}	
